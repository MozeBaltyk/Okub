#!/usr/bin/env bash
set -e

OKUB_INSTALL_PATH=${okub_install_path}
MASTERS=${masters_number}
WORKERS=${workers_number}

printf "\e[1;34m[INFO]\e[m Generate iso.\n";
mkdir -p $${OKUB_INSTALL_PATH}/cache

if [ -f $${OKUB_INSTALL_PATH}/agent-config.yaml ]; then
  # Agent Based
  $${OKUB_INSTALL_PATH}/bin/openshift-install agent create image --dir $${OKUB_INSTALL_PATH}
else
  # UPI method
  if [ ! -f $${OKUB_INSTALL_PATH}/cache/rhcos-live.iso ]; then
    URL_COREOS_ISO=$($${OKUB_INSTALL_PATH}/bin/openshift-install coreos print-stream-json | jq -r .architectures.x86_64.artifacts.metal.formats.iso.disk.location)
    printf "\e[1;34m[INFO]\e[m Download $${URL_COREOS_ISO##*/} as rhcos-live.iso\n";
    curl -Ls $${URL_COREOS_ISO} -o $${OKUB_INSTALL_PATH}/cache/rhcos-live.iso
  fi
  if [ $${MASTERS} -eq 1 ] && [ $${WORKERS} -eq 0 ]; then
      WHICH_IGNITION=bootstrap-in-place-for-live-iso.ign
  else
      WHICH_IGNITION=bootstrap.ign
  fi
  cp -pr $${OKUB_INSTALL_PATH}/cache/rhcos-live.iso $${OKUB_INSTALL_PATH}/cache/rhcos-master.iso
  #cp -pr $${OKUB_INSTALL_PATH}/cache/rhcos-live.iso $${OKUB_INSTALL_PATH}/cache/rhcos-worker.iso
  export COREOS_INSTALLER="podman run --privileged --pull always --rm -v /dev:/dev -v $${OKUB_INSTALL_PATH}:/data -w /data quay.io/coreos/coreos-installer:release"
  $${COREOS_INSTALLER} iso ignition embed -fi "$${WHICH_IGNITION}" "cache/rhcos-master.iso"
  #$${COREOS_INSTALLER} iso ignition embed -fi "worker.ign" "cache/rhcos-worker.iso"
fi
printf "\e[1;32m[OK]\e[m RHCOS iso generated with ignition.\n"
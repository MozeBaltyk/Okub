{{ ansible_managed | comment }}

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    log         127.0.0.1 local2
    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon
    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------

defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option                  http-server-close
    option                  forwardfor except 127.0.0.0/8
    option                  redispatch
    retries                 {{ haproxy_retries }}
    timeout http-request    {{ haproxy_timeout_http_request }}
    timeout queue           {{ haproxy_timeout_check }}
    timeout connect         {{ haproxy_timeout_connect }}
    timeout client          {{ haproxy_timeout_client }}
    timeout server          {{ haproxy_timeout_server }}
    timeout http-keep-alive {{ haproxy_timeout_http_keep_alive }}
    timeout check           {{ haproxy_timeout_check }}
    maxconn                 {{ haproxy_maxconn }}

{% if haproxy_stats == true %}
listen stats
    bind                 {{ haproxy_stats_bind_addr }}:{{ haproxy_stats_port }}
    mode                 http
    stats                enable
    stats                uri /stats
    monitor-uri          /healthz
{% endif %}

#---------------------------------------------------------------------

# 6443
frontend openshift-api-server
    bind *:6443
    default_backend openshift-api-server
    option tcplog

backend openshift-api-server
    balance source
{% if bootstrap is defined %}
    server {{ bootstrap.name | lower }} {{ bootstrap.ipaddr }}:6443 check
{% endif %}
{% for m in masters %}
    server {{ m.name | lower }} {{ m.ipaddr }}:6443 check
{% endfor %}

# 22623
frontend machine-config-server
    bind *:22623
    default_backend machine-config-server
    option tcplog

backend machine-config-server
    balance source
{% if bootstrap is defined %}
    server {{ bootstrap.name | lower }} {{ bootstrap.ipaddr }}:22623 check
{% endif %}
{% for m in masters %}
    server {{ m.name | lower }} {{ m.ipaddr }}:22623 check
{% endfor %}

# 80
frontend ingress-http
    bind *:80
    default_backend ingress-http
    option tcplog

backend ingress-http
    balance source
{% if workers is defined %}
{% for w in workers %}
    server {{ w.name | lower }}-http-router{{ loop.index0 }} {{ w.ipaddr }}:80 check
{% endfor %}
{% else %}
{% for m in masters %}
    server {{ m.name | lower }}-http-router{{ loop.index0 }} {{ m.ipaddr }}:80 check
{% endfor %}
{% endif %}

# 443
frontend ingress-https
    bind *:443
    default_backend ingress-https
    option tcplog

backend ingress-https
    balance source
{% if workers is defined %}
{% for w in workers %}
    server {{ w.name | lower }}-https-router{{ loop.index0 }} {{ w.ipaddr }}:443 check
{% endfor %}
{% else %}
{% for m in masters %}
    server {{ m.name | lower }}-https-router{{ loop.index0 }} {{ m.ipaddr }}:443 check
{% endfor %}
{% endif %}

#---------------------------------------------------------------------

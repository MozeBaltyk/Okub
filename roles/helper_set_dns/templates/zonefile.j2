$TTL 1W
@	IN	SOA	ns1.{{ bind_domain | lower }}.	root (
			{{ serialnumber }}	; serial
			3H		; refresh (3 hours)
			30M		; retry (30 minutes)
			2W		; expiry (2 weeks)
			1W )		; minimum (1 week)
	IN	NS	ns1.{{ bind_domain | lower }}.
	IN	MX 10	smtp.{{ bind_domain | lower }}.
;
; 
ns1	IN	A	{{ bind_helper_ip }}
smtp	IN	A	{{ bind_helper_ip }}
;
{{ bind_helper_name | lower }}	IN	A	{{ bind_helper_ip }}
;
{%if high_availability is defined %}
; Create entry for the bastion hosts
{% for h in high_availability.helpernodes %}
{{ h.name | lower }}		IN	A	{{ h.ip }}
{% endfor %}
{% endif %}
;
; The api points to the IP of your load balancer
{% if dns.lb_ipaddr is defined %}
api		    IN	A	{{ dns.lb_ipaddr }}
api-int		IN	A	{{ dns.lb_ipaddr }}
;
; The wildcard also points to the load balancer
*.apps		IN	A	{{ dns.lb_ipaddr }}
{% else %}
api			IN	A	{{ bind_helper_ip }}
api-int		IN	A	{{ bind_helper_ip }}
;
; The wildcard also points to the load balancer
*.apps		IN	A	{{ bind_helper_ip }}
{% endif %}
;
{% if bind_bootstrap is defined %}
; Create entry for the bootstrap host
{% for b in bind_bootstrap %}
{{ b.name | lower }}	IN	A	{{ b.ip }}
{% endfor %}
;
{% endif %}
; Create entries for the master hosts
{% for m in bind_masters %}
{{ m.name | lower }}		IN	A	{{ m.ip }}
{% endfor %}
;
; Create entries for the worker hosts
{% if bind_workers is defined %}
{% for w in bind_workers %}
{{ w.name | lower }}		IN	A	{{ w.ip }}
{% endfor %}
{% endif %}
;
; The ETCd cluster lives on the masters...so point these to the IP of the masters
{% for m in bind_masters %}
etcd-{{ loop.index0 }}	IN	A	{{ m.ip }}
{% endfor %}
;
{% if bind_other is defined %}
; Create entries for the other hosts
{% for o in bind_other %}
{{ o.name }}		IN	A	{{ o.ip }}
{% endfor %}
;
{% endif %}
; The SRV records are IMPORTANT....make sure you get these right...note the trailing dot at the end...
{% for m in bind_masters %}
_etcd-server-ssl._tcp	IN	SRV	0 10 2380 etcd-{{ loop.index0 }}.{{ bind_domain | lower }}.
{% endfor %}
;
;EOF
